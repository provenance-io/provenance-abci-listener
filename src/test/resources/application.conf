# application
grpc.server {
  addr = localhost
  port = 1234
}

# Properties for Kafka can be defined in this section
# or a configuration section with the same layout.
kafka {
  # Properties for producer
  producer {
    # Assign a topic name and optional prefix where events will be written.
    # Each topic corresponds to the ABCIListenerService RPC methods.
    listen-topics {
      prefix = "test-"
      listen-begin-block = ${?kafka.producer.listen-topics.prefix}"listen-begin-block"
      listen-end-block = ${?kafka.producer.listen-topics.prefix}"listen-end-block"
      listen-deliver-tx = ${?kafka.producer.listen-topics.prefix}"listen-deliver-tx"
      listen-commit = ${?kafka.producer.listen-topics.prefix}"listen-commit"
    }

    # used by the AdminClient to create topics
    # in testing only
    topic.partitions = 1
    topic.replication.factor = 1

    # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
    # can be defined in this configuration section.
    kafka-clients {
      // bootstrap.servers = "using => https://www.testcontainers.org"
      acks = all
      enable.idempotence = true
      max.in.flight.requests.per.connection = 1
      linger.ms = 50
    }
  }

  # Properties for consumer
  consumer {
    input.topic.prefix = "test-"

    # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
    # can be defined in this configuration section.
    kafka-clients {
      // derived from testContainers
      // bootstrap.servers = "localhost:9092"
      enable.auto.commit = true
      auto.commit.interval.ms = 1000
      auto.offset.reset = earliest
//      session.timout.ms = 30000
      key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
    }
  }
}